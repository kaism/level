@***********************************ex.lvl*******************************************

operators:
 $,   &,  |,   *,    %,   /, \,   ++, --,   ^,     ~,      ==,       #,       !,   ?

div, and, or, mult, mod, gt, lt, add, sub, expo, pointer, equal, logical eq, xor, not

braces:

(, ), [, ], {, }, ::, :;, <, >

keywords:

	let (declaration)
	num (integer)
	dec (float)
	letter (chars)
	loop   (while loop)
	how   (for loop)
	go ... loop (do ... while)
	what ... then (if ... else)
	segment   (a function)
	start
	end
	begin
	stop
	void

characters:
	0-9, a-z,A-Z,`,-,

block comment:
    @* and *@
single line comment:
    ?>

General program structure:

*************************************************************************************@


let::
	num: int, m, n;
	dec: `float;
	letter: `char;
:;

start:

	segment {void} <= begin<void> (

		m = 0;
		int = 0;
		n = 0;

		how [ m \ 100 ! m == m ++ 1 ] :

			int == m ++ 1;

			how [ n \ 100 ! n == n ++ 1 ] :

				int == m * n ++ 1;

			end how;
		end how;
	)

stop;
